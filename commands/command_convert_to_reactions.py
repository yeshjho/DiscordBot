from commands.command import *

import discord.errors

from helper_functions import *


class CommandConvertToReactions(Command):
    """
    <letters>
    ÎãµÏû• ÏõêÎ≥∏ Î©îÏãúÏßÄÏóê lettersÎ•º Í∏ÄÏûê Ïù¥Î™®ÏßÄÎ°ú Î∂ÑÌï¥Ìï¥ Î∞òÏùë
    ÎãµÏû•ÌïòÎäî ÏõêÎ≥∏ Î©îÏãúÏßÄÏóê lettersÎ•º Í∞ÄÎä•Ìïú Ïù¥Î™®ÏßÄÎ°ú Î∂ÑÌï¥Ìï¥ Î∞òÏùëÌï¥ Ï§çÎãàÎã§.
    Ïòà) `react abc -> ÏõêÎ≥∏ Î©îÏãúÏßÄÏóê :regional_indicator_a:, :regional_indicator_b:, :regional_indicator_c:Î•º Î∞òÏùë
    """
    def __init__(self):
        super().__init__()

        self.letter_icon_map = {'a': ['üá¶', 'üÖ∞Ô∏è'], 'b': ['üáß', 'üÖ±Ô∏è'], 'c': ['üá®'], 'd': ['üá©'], 'e': ['üá™'],
                                'f': ['üá´'], 'g': ['üá¨'], 'h': ['üá≠'], 'i': ['üáÆ', '‚ÑπÔ∏è'], 'j': ['üáØ'], 'k': ['üá∞'],
                                'l': ['üá±'], 'm': ['üá≤'], 'n': ['üá≥'], 'o': ['üá¥', 'üÖæÔ∏è'], 'p': ['üáµ', 'üÖøÔ∏è'],
                                'q': ['üá∂'], 'r': ['üá∑'], 's': ['üá∏'], 't': ['üáπ'], 'u': ['üá∫'], 'v': ['üáª'],
                                'w': ['üáº'], 'x': ['üáΩ'], 'y': ['üáæ'], 'z': ['üáø'],
                                '0': ['0Ô∏è‚É£'], '1': ['1Ô∏è‚É£'], '2': ['2Ô∏è‚É£'], '3': ['3Ô∏è‚É£'], '4': ['4Ô∏è‚É£'], '5': ['5Ô∏è‚É£'],
                                '6': ['6Ô∏è‚É£'], '7': ['7Ô∏è‚É£'], '8': ['8Ô∏è‚É£'], '9': ['9Ô∏è‚É£'], '10': ['üîü'],
                                'ab': ['üÜé'], 'cl': ['üÜë'], 'ok': ['üÜó'], 'ng': ['üÜñ'], 'id': ['üÜî'], 'sos': ['üÜò'],
                                'vs': ['üÜö'], 'cool': ['üÜí'], 'new': ['üÜï'], 'free': ['üÜì'], 'abc': ['üî§']}
        self.skip_letters = [' ']

        extra_emoji_num = 3
        extra_vowel_num = 2
        for i in range(1, extra_emoji_num + 1):
            for c in "abcdefghijklmnopqrstuvwxyz":
                self.letter_icon_map[c].insert(0, "#" + c + "_" * i)
        for i in range(extra_emoji_num + 1, extra_emoji_num + extra_vowel_num + 1):
            for c in "aeiou":
                self.letter_icon_map[c].insert(0, "#" + c + "_" * i)

    def get_command_str(self) -> str:
        return "react"

    @execute_condition_checker()
    async def execute(self, msg: Message, arguments: list, *args, **kwargs):
        if not msg.reference:
            await msg.delete()
            return ECommandExecuteResult.SYNTAX_ERROR

        original_msg = await msg.channel.fetch_message(msg.reference.message_id)
        if not original_msg:
            await msg.delete()
            return ECommandExecuteResult.CUSTOM_ERROR, mention_user(msg.author) + " ÏõêÎ≥∏ Î©îÏãúÏßÄÍ∞Ä ÏóÜÏñ¥Ï°åÏñ¥Ïöî!"

        await msg.delete()

        s = ''.join(arguments).lower()
        letter_icon_map_copy = self.letter_icon_map.copy()
        icon_name_list = []

        current_to_find = ''
        for c in s:
            if c in self.skip_letters:
                continue

            current_to_find += c
            if current_to_find in letter_icon_map_copy and len(letter_icon_map_copy[current_to_find]) > 0:
                icon_name_list.append(letter_icon_map_copy[current_to_find][0])
                letter_icon_map_copy[current_to_find] = letter_icon_map_copy[current_to_find][1:]
                current_to_find = ''

        if current_to_find != '':
            return ECommandExecuteResult.CUSTOM_ERROR, mention_user(msg.author) + " Ïù¥Î™®ÏßÄÍ∞Ä Î∂ÄÏ°±Ìï¥Ïöî!"
        else:
            try:
                for icon_name in icon_name_list:
                    emoji = icon_name
                    if emoji.startswith('#'):
                        emoji = discord.utils.get(kwargs['bot'].emojis, name=emoji[1:])
                    await original_msg.add_reaction(emoji)
            except discord.errors.Forbidden:
                pass
